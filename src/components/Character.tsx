/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/models/character.glb -o ./src/components/Character.jsx 
*/

import { useEffect, useMemo, useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import { useGraph } from '@react-three/fiber'
import type { Object3D, SkinnedMesh } from 'three'

interface CharacterProps {
  color?: string;
  animation: string;
  position?: [number, number, number];
}

export function Character({
  animation,
  ...props
}: CharacterProps) {

  const group = useRef<Object3D>(null)
  const { scene, materials, animations } = useGLTF('models/XBot.glb')
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes } = useGraph(clone)

  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    if (actions[animation]) {
      actions[animation].reset().fadeIn(0.5).play()
      return () => {
        if (actions[animation]) {
          actions[animation].fadeOut(0.5)
        }
      }
    }
  }, [animation, actions])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Character" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Beta_Joints"
            geometry={(nodes.Beta_Joints as SkinnedMesh).geometry}
            material={materials.Beta_Joints_MAT1}
            skeleton={(nodes.Beta_Joints as SkinnedMesh).skeleton}>
          </skinnedMesh>
          <skinnedMesh name="Beta_Surface"
            geometry={(nodes.Beta_Surface as SkinnedMesh).geometry}
            material={materials.Beta_HighLimbsGeoSG3}
            skeleton={(nodes.Beta_Surface as SkinnedMesh).skeleton}>
            <meshStandardMaterial color={props.color} />
          </skinnedMesh>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('models/XBot.glb')